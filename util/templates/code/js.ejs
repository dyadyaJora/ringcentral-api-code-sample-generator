// https://developers.ringcentral.com/my-account.html#/applications
// Find your credentials at the above url, set them as environment variables, or enter them below
<%
let pathParams, queryParams, postParams
if (operation.parameters && (pathParams = operation.parameters.filter(param => param.in === 'path')).length > 0) {
    %>
// PATH PARAMETERS
    <%_
    for (pathParam of pathParams) {
        -%>
const <%= pathParam.name %> = '<ENTER VALUE>';
        <%_
    }
}

let args = []

if (operation.parameters && (queryParams = operation.parameters.filter(param => param.in === 'query')).length > 0) {
    args.unshift('queryParams')
    %>
// OPTIONAL QUERY PARAMETERS
const queryParams = <%- ejs.render(object, {
    properties: queryParams,
    optional: true,
    depth: 1
}) %>
<%
}

if (operation.parameters && (postParams = operation.parameters.find(param => param.name === 'body'))) {
    args.unshift('body')
    const def = defs.loadDefinition(postParams.schema['$ref'].substring(postParams.schema['$ref'].lastIndexOf('/') + 1))

    const convert = (subdef) => Object.entries(subdef.properties).map(([name, property]) => {
        property.name = name
        return property
    })

    const render = (subdef, depth, render) => ejs.render(object, {
        properties: convert(subdef),
        depth: depth,
        render: render
    })
    %>
// POST BODY
const body = <%- render(def, 1, render) %>;
    <%_
}

if (operation.parameters && operation.parameters.some(param => param.in === 'formData')) args.unshift('formData')
if (args.length > 0) args.unshift('')
-%>

const SDK = require('ringcentral');
const rcsdk = new SDK({server: process.env.serverURL, appKey: process.env.clientId, appSecret: process.env.clientSecret});
const platform = rcsdk.platform();
await platform.login({ username: process.env.username, extension: process.env.extension, password: process.env.password });
const r = await platform.<%= method %>(`<%= url.replace(/{/g, '${') %>`<%= args.join(', ') %>);
