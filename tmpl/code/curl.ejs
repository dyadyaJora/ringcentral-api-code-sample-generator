# https://developers.ringcentral.com/my-account.html#/applications
# Find your credentials at the above url, set them as environment variables, or enter them below
<%
let queryParams, postParams, bodyString = ''

if (operation && operation.parameters && (postParams = operation.parameters.find(param => param.name === 'body'))) {
    const def = defs.loadDefinition(postParams.schema.$ref.substring(postParams.schema.$ref.lastIndexOf('/') + 1))

    const convert = (subdef) => Object.entries(subdef.properties).map(([name, property]) => {
        property.name = name
        return property
    })

    const render = (subdef, depth) => ejs.render(object, {
        properties: convert(subdef),
        depth: depth,
        render: render
    })
    bodyString = "\n    --data '" + render(def, 1) + "' \\"
    
}

let formDataArgs = [] 
if (operation && operation.parameters && operation.parameters.some(param => param.in === 'formData')) formDataArgs.unshift('formData')
if (formDataArgs.length > 0) formDataArgs.unshift('')

let headerString = '', headerParams = [];
if (operation && operation.parameters && (headerParams = operation.parameters.filter(param => param.in === 'header'))) {
    headerString = headerParams.map(property => { return ` -H "${property.name}: <ENTER_VALUE>"`; }).join(' ');
}


%>curl -X <%- `${method.toUpperCase()}` -%> <%- `${headerString}` -%> \<%- `${bodyString}` -%><%- '\n' -%>
    "https://platform.ringcentral.com<%- `${url}` -%><%
let args = []
if (operation && operation.parameters && (queryParams = operation.parameters.filter(param => param.in === 'query')).length > 0) {
    args.unshift('queryParams');
    let queryString = queryParams.map(property => { return `${property.name}=<ENTER_VALUE>`; }).join('&');
    %>?<%- `${queryString}` -%>
<%
}
%>"
